/* tslint:disable */
/* eslint-disable */
/**
 * n.xyz REST API
 * REST API for blockchain data.
 *
 * The version of the OpenAPI document: 0.17.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BlockchainInfo
 */
export interface BlockchainInfo {
    /**
     * The name of a given chain. This is often a canonical name since a protocol may have multiple chains.
     * @type {string}
     * @memberof BlockchainInfo
     */
    name?: string;
    /**
     * The short-hand name for a given chain. Multiple chains (e.g. mainnet and a testnet) may have the same name.
     * @type {string}
     * @memberof BlockchainInfo
     */
    shortName?: string;
    /**
     * A CAIP-2 compliant chain ID. This ID is designed to provide a unique identifier for a given chain.
     * @type {string}
     * @memberof BlockchainInfo
     */
    chainID?: string;
    /**
     * An ID used for a chain in a given ecosystem. This ID is not canonical and may collide with other chains. Do not use this value as a unique identifier.
     * @type {string}
     * @memberof BlockchainInfo
     */
    shortChainID?: string;
}

/**
 * Check if a given object implements the BlockchainInfo interface.
 */
export function instanceOfBlockchainInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockchainInfoFromJSON(json: any): BlockchainInfo {
    return BlockchainInfoFromJSONTyped(json, false);
}

export function BlockchainInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'shortName': !exists(json, 'shortName') ? undefined : json['shortName'],
        'chainID': !exists(json, 'chainID') ? undefined : json['chainID'],
        'shortChainID': !exists(json, 'shortChainID') ? undefined : json['shortChainID'],
    };
}

export function BlockchainInfoToJSON(value?: BlockchainInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'shortName': value.shortName,
        'chainID': value.chainID,
        'shortChainID': value.shortChainID,
    };
}

