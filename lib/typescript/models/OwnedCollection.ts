/* tslint:disable */
/* eslint-disable */
/**
 * n.xyz REST API
 * REST API for blockchain data.
 *
 * The version of the OpenAPI document: 0.17.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Collection } from './Collection';
import {
    CollectionFromJSON,
    CollectionFromJSONTyped,
    CollectionToJSON,
} from './Collection';
import type { CurrencyInfo } from './CurrencyInfo';
import {
    CurrencyInfoFromJSON,
    CurrencyInfoFromJSONTyped,
    CurrencyInfoToJSON,
} from './CurrencyInfo';
import type { Token } from './Token';
import {
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
} from './Token';

/**
 * 
 * @export
 * @interface OwnedCollection
 */
export interface OwnedCollection {
    /**
     * A sample of the tokens owned by this wallet.
     * @type {Array<Token>}
     * @memberof OwnedCollection
     */
    tokens?: Array<Token>;
    /**
     * 
     * @type {Collection}
     * @memberof OwnedCollection
     */
    collection?: Collection;
    /**
     * 
     * @type {CurrencyInfo}
     * @memberof OwnedCollection
     */
    totalSpent?: CurrencyInfo;
}

/**
 * Check if a given object implements the OwnedCollection interface.
 */
export function instanceOfOwnedCollection(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OwnedCollectionFromJSON(json: any): OwnedCollection {
    return OwnedCollectionFromJSONTyped(json, false);
}

export function OwnedCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OwnedCollection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tokens': !exists(json, 'tokens') ? undefined : ((json['tokens'] as Array<any>).map(TokenFromJSON)),
        'collection': !exists(json, 'collection') ? undefined : CollectionFromJSON(json['collection']),
        'totalSpent': !exists(json, 'totalSpent') ? undefined : CurrencyInfoFromJSON(json['totalSpent']),
    };
}

export function OwnedCollectionToJSON(value?: OwnedCollection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tokens': value.tokens === undefined ? undefined : ((value.tokens as Array<any>).map(TokenToJSON)),
        'collection': CollectionToJSON(value.collection),
        'totalSpent': CurrencyInfoToJSON(value.totalSpent),
    };
}

