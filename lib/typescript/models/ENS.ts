/* tslint:disable */
/* eslint-disable */
/**
 * n.xyz REST API
 * REST API for blockchain data.
 *
 * The version of the OpenAPI document: 0.17.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ENS
 */
export interface ENS {
    /**
     * The ENS or domain name.
     * @type {string}
     * @memberof ENS
     */
    name?: string;
    /**
     * The address the ENS record points to.
     * @type {string}
     * @memberof ENS
     */
    pointsTo?: string;
    /**
     * Date the ENS registration expires.
     * @type {Date}
     * @memberof ENS
     */
    expires?: Date | null;
    /**
     * A wallet address can have multiple ENS records. The primary ENS name represents a "cross-platform web3 username and profile." A wallet address can only have one primary name, and it can change at any time.
     * @type {boolean}
     * @memberof ENS
     */
    isPrimary?: boolean;
}

/**
 * Check if a given object implements the ENS interface.
 */
export function instanceOfENS(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ENSFromJSON(json: any): ENS {
    return ENSFromJSONTyped(json, false);
}

export function ENSFromJSONTyped(json: any, ignoreDiscriminator: boolean): ENS {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pointsTo': !exists(json, 'pointsTo') ? undefined : json['pointsTo'],
        'expires': !exists(json, 'expires') ? undefined : (json['expires'] === null ? null : new Date(json['expires'])),
        'isPrimary': !exists(json, 'isPrimary') ? undefined : json['isPrimary'],
    };
}

export function ENSToJSON(value?: ENS | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'pointsTo': value.pointsTo,
        'expires': value.expires === undefined ? undefined : (value.expires === null ? null : value.expires.toISOString()),
        'isPrimary': value.isPrimary,
    };
}

