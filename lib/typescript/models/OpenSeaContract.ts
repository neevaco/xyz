/* tslint:disable */
/* eslint-disable */
/**
 * n.xyz REST API
 * REST API for blockchain data.
 *
 * The version of the OpenAPI document: 0.17.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OpenSeaContract
 */
export interface OpenSeaContract {
    /**
     * The type of contract.
     * @type {string}
     * @memberof OpenSeaContract
     */
    assetContractType?: OpenSeaContractAssetContractTypeEnum;
    /**
     * The NFT Version
     * @type {string}
     * @memberof OpenSeaContract
     */
    nftVersion?: string;
    /**
     * The OpenSea Version
     * @type {string}
     * @memberof OpenSeaContract
     */
    openSeaVersion?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OpenSeaContract
     */
    defaultToFiat?: boolean;
    /**
     * Total fee levied on buyers by this contract, in basis points
     * @type {number}
     * @memberof OpenSeaContract
     */
    buyerFeeBasisPoints?: number;
    /**
     * Total fee levied on sellers by this contract, in basis points
     * @type {number}
     * @memberof OpenSeaContract
     */
    sellerFeeBasisPoints?: number;
}


/**
 * @export
 */
export const OpenSeaContractAssetContractTypeEnum = {
    Nft: 'NFT',
    Sft: 'SFT',
    Unknown: 'unknown'
} as const;
export type OpenSeaContractAssetContractTypeEnum = typeof OpenSeaContractAssetContractTypeEnum[keyof typeof OpenSeaContractAssetContractTypeEnum];


/**
 * Check if a given object implements the OpenSeaContract interface.
 */
export function instanceOfOpenSeaContract(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpenSeaContractFromJSON(json: any): OpenSeaContract {
    return OpenSeaContractFromJSONTyped(json, false);
}

export function OpenSeaContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenSeaContract {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assetContractType': !exists(json, 'assetContractType') ? undefined : json['assetContractType'],
        'nftVersion': !exists(json, 'nftVersion') ? undefined : json['nftVersion'],
        'openSeaVersion': !exists(json, 'openSeaVersion') ? undefined : json['openSeaVersion'],
        'defaultToFiat': !exists(json, 'defaultToFiat') ? undefined : json['defaultToFiat'],
        'buyerFeeBasisPoints': !exists(json, 'buyerFeeBasisPoints') ? undefined : json['buyerFeeBasisPoints'],
        'sellerFeeBasisPoints': !exists(json, 'sellerFeeBasisPoints') ? undefined : json['sellerFeeBasisPoints'],
    };
}

export function OpenSeaContractToJSON(value?: OpenSeaContract | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'assetContractType': value.assetContractType,
        'nftVersion': value.nftVersion,
        'openSeaVersion': value.openSeaVersion,
        'defaultToFiat': value.defaultToFiat,
        'buyerFeeBasisPoints': value.buyerFeeBasisPoints,
        'sellerFeeBasisPoints': value.sellerFeeBasisPoints,
    };
}

