{"mappings":"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","sources":["index.ts","runtime.ts","apis/index.ts","apis/AlphaApi.ts","models/index.ts","models/BlockchainInfo.ts","models/Collection.ts","models/CurrencyInfo.ts","models/Media.ts","models/MediaVersion.ts","models/SocialMedia.ts","models/URL.ts","models/ENS.ts","models/ErrorMessage.ts","models/MediaPreview.ts","models/NonFungibleToken.ts","models/TokenAttribute.ts","models/Transaction.ts","models/TransactionLogLine.ts","models/Wallet.ts","models/OwnedCollection.ts","models/Token.ts","models/OpenSeaContract.ts","models/SearchDocument.ts","models/TokenEvents.ts","models/TokenGate.ts","apis/DefaultApi.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nexport * from './runtime';\nexport * from './apis';\nexport * from './models';\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"https://api.n.xyz\".replace(/\\/+$/, \"\");\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    set config(configuration: Configuration) {\n        this.configuration = configuration;\n    }\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI | undefined {\n        return this.configuration.fetchApi;\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : async () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport const DefaultConfig = new Configuration();\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = DefaultConfig) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response> {\n        const { url, init } = await this.createFetchParams(context, initOverrides);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw new ResponseError(response, 'Response returned an error code');\n    }\n\n    private async createFetchParams(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});\n\n        const initOverrideFn =\n            typeof initOverrides === \"function\"\n                ? initOverrides\n                : async () => initOverrides;\n\n        const initParams = {\n            method: context.method,\n            headers,\n            body: context.body,\n            credentials: this.configuration.credentials,\n        };\n\n        const overridedInit: RequestInit = {\n            ...initParams,\n            ...(await initOverrideFn({\n                init: initParams,\n                context,\n            }))\n        }\n\n        const init: RequestInit = {\n            ...overridedInit,\n            body:\n                isFormData(overridedInit.body) ||\n                overridedInit.body instanceof URLSearchParams ||\n                isBlob(overridedInit.body)\n                    ? overridedInit.body\n                    : JSON.stringify(overridedInit.body),\n        };\n\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = undefined;\n        try {\n            response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n        } catch (e) {\n            for (const middleware of this.middleware) {\n                if (middleware.onError) {\n                    response = await middleware.onError({\n                        fetch: this.fetchApi,\n                        url: fetchParams.url,\n                        init: fetchParams.init,\n                        error: e,\n                        response: response ? response.clone() : undefined,\n                    }) || response;\n                }\n            }\n            if (response !== undefined) {\n                throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');\n            }\n        }\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nfunction isBlob(value: any): value is Blob {\n    return typeof Blob !== 'undefined' && value instanceof Blob\n}\n\nfunction isFormData(value: any): value is FormData {\n    return typeof FormData !== \"undefined\" && value instanceof FormData\n}\n\nexport class ResponseError extends Error {\n    name: \"ResponseError\" = \"ResponseError\";\n    constructor(public response: Response, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class FetchError extends Error {\n    name: \"FetchError\" = \"FetchError\";\n    constructor(public cause: unknown, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type HTTPRequestInit = { headers?: HTTPHeaders; method: HTTPMethod; credentials?: RequestCredentials; body?: HTTPBody }\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport type InitOverrideFunction = (requestContext: { init: HTTPRequestInit, context: RequestOpts }) => Promise<RequestInit>\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map(key => querystringSingleKey(key, params[key], prefix))\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nfunction querystringSingleKey(key: string, value: string | number | null | undefined | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery, keyPrefix: string = ''): string {\n    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);\n    if (value instanceof Array) {\n        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n            .join(`&${encodeURIComponent(fullKey)}=`);\n        return `${encodeURIComponent(fullKey)}=${multiValue}`;\n    }\n    if (value instanceof Set) {\n        const valueAsArray = Array.from(value);\n        return querystringSingleKey(key, valueAsArray, keyPrefix);\n    }\n    if (value instanceof Date) {\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n    }\n    if (value instanceof Object) {\n        return querystring(value as HTTPQuery, fullKey);\n    }\n    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface ErrorContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    error: unknown;\n    response?: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n    onError?(context: ErrorContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\nexport * from './AlphaApi';\nexport * from './DefaultApi';\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  Collection,\n  ErrorMessage,\n  Token,\n  Wallet,\n} from '../models';\nimport {\n    CollectionFromJSON,\n    CollectionToJSON,\n    ErrorMessageFromJSON,\n    ErrorMessageToJSON,\n    TokenFromJSON,\n    TokenToJSON,\n    WalletFromJSON,\n    WalletToJSON,\n} from '../models';\n\n/**\n * \n */\nexport class AlphaApi extends runtime.BaseAPI {\n\n    /**\n     * Returns trending and interesting collections on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.\n     */\n    async getTopCollectionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Collection>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1-alpha/collections/top`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CollectionFromJSON));\n    }\n\n    /**\n     * Returns trending and interesting collections on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.\n     */\n    async getTopCollections(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Collection>> {\n        const response = await this.getTopCollectionsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns trending and interesting NFTs and SFTs on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.\n     */\n    async getTopTokensRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1-alpha/tokens/top`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Returns trending and interesting NFTs and SFTs on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.\n     */\n    async getTopTokens(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getTopTokensRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns trending and interesting wallets on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.\n     */\n    async getTopWalletsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Wallet>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1-alpha/wallets/top`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WalletFromJSON));\n    }\n\n    /**\n     * Returns trending and interesting wallets on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.\n     */\n    async getTopWallets(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Wallet>> {\n        const response = await this.getTopWalletsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\nexport * from './BlockchainInfo';\nexport * from './Collection';\nexport * from './CurrencyInfo';\nexport * from './ENS';\nexport * from './ErrorMessage';\nexport * from './Media';\nexport * from './MediaPreview';\nexport * from './MediaVersion';\nexport * from './NonFungibleToken';\nexport * from './OpenSeaContract';\nexport * from './OwnedCollection';\nexport * from './SearchDocument';\nexport * from './SocialMedia';\nexport * from './Token';\nexport * from './TokenAttribute';\nexport * from './TokenEvents';\nexport * from './TokenGate';\nexport * from './Transaction';\nexport * from './TransactionLogLine';\nexport * from './URL';\nexport * from './Wallet';\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface BlockchainInfo\n */\nexport interface BlockchainInfo {\n    /**\n     * The name of a given chain. This is often a canonical name since a protocol may have multiple chains.\n     * @type {string}\n     * @memberof BlockchainInfo\n     */\n    name?: string;\n    /**\n     * The short-hand name for a given chain. Multiple chains (e.g. mainnet and a testnet) may have the same name.\n     * @type {string}\n     * @memberof BlockchainInfo\n     */\n    shortName?: string;\n    /**\n     * A CAIP-2 compliant chain ID. This ID is designed to provide a unique identifier for a given chain.\n     * @type {string}\n     * @memberof BlockchainInfo\n     */\n    chainID?: string;\n    /**\n     * An ID used for a chain in a given ecosystem. This ID is not canonical and may collide with other chains. Do not use this value as a unique identifier.\n     * @type {string}\n     * @memberof BlockchainInfo\n     */\n    shortChainID?: string;\n}\n\n/**\n * Check if a given object implements the BlockchainInfo interface.\n */\nexport function instanceOfBlockchainInfo(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function BlockchainInfoFromJSON(json: any): BlockchainInfo {\n    return BlockchainInfoFromJSONTyped(json, false);\n}\n\nexport function BlockchainInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'shortName': !exists(json, 'shortName') ? undefined : json['shortName'],\n        'chainID': !exists(json, 'chainID') ? undefined : json['chainID'],\n        'shortChainID': !exists(json, 'shortChainID') ? undefined : json['shortChainID'],\n    };\n}\n\nexport function BlockchainInfoToJSON(value?: BlockchainInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'shortName': value.shortName,\n        'chainID': value.chainID,\n        'shortChainID': value.shortChainID,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { BlockchainInfo } from './BlockchainInfo';\nimport {\n    BlockchainInfoFromJSON,\n    BlockchainInfoFromJSONTyped,\n    BlockchainInfoToJSON,\n} from './BlockchainInfo';\nimport type { CurrencyInfo } from './CurrencyInfo';\nimport {\n    CurrencyInfoFromJSON,\n    CurrencyInfoFromJSONTyped,\n    CurrencyInfoToJSON,\n} from './CurrencyInfo';\nimport type { Media } from './Media';\nimport {\n    MediaFromJSON,\n    MediaFromJSONTyped,\n    MediaToJSON,\n} from './Media';\nimport type { SocialMedia } from './SocialMedia';\nimport {\n    SocialMediaFromJSON,\n    SocialMediaFromJSONTyped,\n    SocialMediaToJSON,\n} from './SocialMedia';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n} from './URL';\n\n/**\n * \n * @export\n * @interface Collection\n */\nexport interface Collection {\n    /**\n     * \n     * @type {BlockchainInfo}\n     * @memberof Collection\n     */\n    blockchain: BlockchainInfo;\n    /**\n     * Address of the contract that minted this NFT.\n     * @type {string}\n     * @memberof Collection\n     */\n    contractAddress: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Collection\n     */\n    symbol?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Collection\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Collection\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Collection\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Collection\n     */\n    shortDescription?: string;\n    /**\n     * Timestamp of creation of this contract in RFC 3339.\n     * @type {Date}\n     * @memberof Collection\n     */\n    createdDate?: Date | null;\n    /**\n     * \n     * @type {CurrencyInfo}\n     * @memberof Collection\n     */\n    floorPrice?: CurrencyInfo;\n    /**\n     * \n     * @type {Media}\n     * @memberof Collection\n     */\n    bannerImage?: Media;\n    /**\n     * \n     * @type {Media}\n     * @memberof Collection\n     */\n    featuredImage?: Media;\n    /**\n     * \n     * @type {Array<URL>}\n     * @memberof Collection\n     */\n    urls?: Array<URL>;\n    /**\n     * \n     * @type {Array<SocialMedia>}\n     * @memberof Collection\n     */\n    socialMedia?: Array<SocialMedia>;\n}\n\n/**\n * Check if a given object implements the Collection interface.\n */\nexport function instanceOfCollection(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"blockchain\" in value;\n    isInstance = isInstance && \"contractAddress\" in value;\n\n    return isInstance;\n}\n\nexport function CollectionFromJSON(json: any): Collection {\n    return CollectionFromJSONTyped(json, false);\n}\n\nexport function CollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Collection {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'blockchain': BlockchainInfoFromJSON(json['blockchain']),\n        'contractAddress': json['contractAddress'],\n        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],\n        'slug': !exists(json, 'slug') ? undefined : json['slug'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'description': !exists(json, 'description') ? undefined : json['description'],\n        'shortDescription': !exists(json, 'shortDescription') ? undefined : json['shortDescription'],\n        'createdDate': !exists(json, 'createdDate') ? undefined : (json['createdDate'] === null ? null : new Date(json['createdDate'])),\n        'floorPrice': !exists(json, 'floorPrice') ? undefined : CurrencyInfoFromJSON(json['floorPrice']),\n        'bannerImage': !exists(json, 'bannerImage') ? undefined : MediaFromJSON(json['bannerImage']),\n        'featuredImage': !exists(json, 'featuredImage') ? undefined : MediaFromJSON(json['featuredImage']),\n        'urls': !exists(json, 'urls') ? undefined : ((json['urls'] as Array<any>).map(URLFromJSON)),\n        'socialMedia': !exists(json, 'socialMedia') ? undefined : ((json['socialMedia'] as Array<any>).map(SocialMediaFromJSON)),\n    };\n}\n\nexport function CollectionToJSON(value?: Collection | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'blockchain': BlockchainInfoToJSON(value.blockchain),\n        'contractAddress': value.contractAddress,\n        'symbol': value.symbol,\n        'slug': value.slug,\n        'name': value.name,\n        'description': value.description,\n        'shortDescription': value.shortDescription,\n        'createdDate': value.createdDate === undefined ? undefined : (value.createdDate === null ? null : value.createdDate.toISOString()),\n        'floorPrice': CurrencyInfoToJSON(value.floorPrice),\n        'bannerImage': MediaToJSON(value.bannerImage),\n        'featuredImage': MediaToJSON(value.featuredImage),\n        'urls': value.urls === undefined ? undefined : ((value.urls as Array<any>).map(URLToJSON)),\n        'socialMedia': value.socialMedia === undefined ? undefined : ((value.socialMedia as Array<any>).map(SocialMediaToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CurrencyInfo\n */\nexport interface CurrencyInfo {\n    /**\n     * Transaction value as a string-encoded bigint in the base unit for a given blockchain (e.g. wei for Ethereum) or fiat currency (e.g. US Dollars).\n     * @type {string}\n     * @memberof CurrencyInfo\n     */\n    value?: string;\n    /**\n     * Transaction value as a float representing the amount of tokens, e.g. 0.89 would be 89% of a token.\n     * @type {number}\n     * @memberof CurrencyInfo\n     */\n    tokenValue?: number;\n    /**\n     * The total value of this token in fiat currency.\n     * @type {Array<CurrencyInfo>}\n     * @memberof CurrencyInfo\n     */\n    fiat?: Array<CurrencyInfo>;\n    /**\n     * A formatted, human-friendly representation of the transaction value, e.g. the value in Ether, possibly with localized thousands separator and radix character.\n     * @type {string}\n     * @memberof CurrencyInfo\n     */\n    pretty?: string;\n    /**\n     * The base value for a given token. For Ethereum this would be 18. This would yield an equation such as 890000000000000000wei / 10^18 = 0.89 ETH.\n     * @type {number}\n     * @memberof CurrencyInfo\n     */\n    decimals?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof CurrencyInfo\n     */\n    symbol?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CurrencyInfo\n     */\n    contractAddress?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CurrencyInfo\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the CurrencyInfo interface.\n */\nexport function instanceOfCurrencyInfo(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function CurrencyInfoFromJSON(json: any): CurrencyInfo {\n    return CurrencyInfoFromJSONTyped(json, false);\n}\n\nexport function CurrencyInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencyInfo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'value': !exists(json, 'value') ? undefined : json['value'],\n        'tokenValue': !exists(json, 'tokenValue') ? undefined : json['tokenValue'],\n        'fiat': !exists(json, 'fiat') ? undefined : ((json['fiat'] as Array<any>).map(CurrencyInfoFromJSON)),\n        'pretty': !exists(json, 'pretty') ? undefined : json['pretty'],\n        'decimals': !exists(json, 'decimals') ? undefined : json['decimals'],\n        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],\n        'contractAddress': !exists(json, 'contractAddress') ? undefined : json['contractAddress'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n    };\n}\n\nexport function CurrencyInfoToJSON(value?: CurrencyInfo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value': value.value,\n        'tokenValue': value.tokenValue,\n        'fiat': value.fiat === undefined ? undefined : ((value.fiat as Array<any>).map(CurrencyInfoToJSON)),\n        'pretty': value.pretty,\n        'decimals': value.decimals,\n        'symbol': value.symbol,\n        'contractAddress': value.contractAddress,\n        'name': value.name,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { MediaVersion } from './MediaVersion';\nimport {\n    MediaVersionFromJSON,\n    MediaVersionFromJSONTyped,\n    MediaVersionToJSON,\n} from './MediaVersion';\n\n/**\n * \n * @export\n * @interface Media\n */\nexport interface Media {\n    /**\n     * \n     * @type {string}\n     * @memberof Media\n     */\n    key: string;\n    /**\n     * URI for the image asset.\n     * @type {string}\n     * @memberof Media\n     */\n    uRI?: string;\n    /**\n     * \n     * @type {Array<MediaVersion>}\n     * @memberof Media\n     */\n    version?: Array<MediaVersion>;\n}\n\n/**\n * Check if a given object implements the Media interface.\n */\nexport function instanceOfMedia(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"key\" in value;\n\n    return isInstance;\n}\n\nexport function MediaFromJSON(json: any): Media {\n    return MediaFromJSONTyped(json, false);\n}\n\nexport function MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Media {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'key': json['key'],\n        'uRI': !exists(json, 'URI') ? undefined : json['URI'],\n        'version': !exists(json, 'version') ? undefined : ((json['version'] as Array<any>).map(MediaVersionFromJSON)),\n    };\n}\n\nexport function MediaToJSON(value?: Media | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'key': value.key,\n        'URI': value.uRI,\n        'version': value.version === undefined ? undefined : ((value.version as Array<any>).map(MediaVersionToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MediaVersion\n */\nexport interface MediaVersion {\n    /**\n     * \n     * @type {string}\n     * @memberof MediaVersion\n     */\n    kind?: MediaVersionKindEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof MediaVersion\n     */\n    format?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof MediaVersion\n     */\n    width?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MediaVersion\n     */\n    height?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MediaVersion\n     */\n    numBytes?: number;\n    /**\n     * If a video, length of video in ISO 8601 duration format.\n     * @type {string}\n     * @memberof MediaVersion\n     */\n    duration?: string;\n}\n\n\n/**\n * @export\n */\nexport const MediaVersionKindEnum = {\n    Video: 'video',\n    Image: 'image',\n    Raw: 'raw',\n    Audio: 'audio'\n} as const;\nexport type MediaVersionKindEnum = typeof MediaVersionKindEnum[keyof typeof MediaVersionKindEnum];\n\n\n/**\n * Check if a given object implements the MediaVersion interface.\n */\nexport function instanceOfMediaVersion(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function MediaVersionFromJSON(json: any): MediaVersion {\n    return MediaVersionFromJSONTyped(json, false);\n}\n\nexport function MediaVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaVersion {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'kind': !exists(json, 'kind') ? undefined : json['kind'],\n        'format': !exists(json, 'format') ? undefined : json['format'],\n        'width': !exists(json, 'width') ? undefined : json['width'],\n        'height': !exists(json, 'height') ? undefined : json['height'],\n        'numBytes': !exists(json, 'numBytes') ? undefined : json['numBytes'],\n        'duration': !exists(json, 'duration') ? undefined : json['duration'],\n    };\n}\n\nexport function MediaVersionToJSON(value?: MediaVersion | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'kind': value.kind,\n        'format': value.format,\n        'width': value.width,\n        'height': value.height,\n        'numBytes': value.numBytes,\n        'duration': value.duration,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SocialMedia\n */\nexport interface SocialMedia {\n    /**\n     * \n     * @type {string}\n     * @memberof SocialMedia\n     */\n    network?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SocialMedia\n     */\n    username?: string;\n}\n\n/**\n * Check if a given object implements the SocialMedia interface.\n */\nexport function instanceOfSocialMedia(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function SocialMediaFromJSON(json: any): SocialMedia {\n    return SocialMediaFromJSONTyped(json, false);\n}\n\nexport function SocialMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialMedia {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'network': !exists(json, 'network') ? undefined : json['network'],\n        'username': !exists(json, 'username') ? undefined : json['username'],\n    };\n}\n\nexport function SocialMediaToJSON(value?: SocialMedia | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'network': value.network,\n        'username': value.username,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface URL\n */\nexport interface URL {\n    /**\n     * Human-readable name of the site.\n     * @type {string}\n     * @memberof URL\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    url?: string;\n}\n\n/**\n * Check if a given object implements the URL interface.\n */\nexport function instanceOfURL(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function URLFromJSON(json: any): URL {\n    return URLFromJSONTyped(json, false);\n}\n\nexport function URLFromJSONTyped(json: any, ignoreDiscriminator: boolean): URL {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'url': !exists(json, 'url') ? undefined : json['url'],\n    };\n}\n\nexport function URLToJSON(value?: URL | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'url': value.url,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ENS\n */\nexport interface ENS {\n    /**\n     * The ENS or domain name.\n     * @type {string}\n     * @memberof ENS\n     */\n    name?: string;\n    /**\n     * The address the ENS record points to.\n     * @type {string}\n     * @memberof ENS\n     */\n    pointsTo?: string;\n    /**\n     * Date the ENS registration expires.\n     * @type {Date}\n     * @memberof ENS\n     */\n    expires?: Date | null;\n    /**\n     * A wallet address can have multiple ENS records. The primary ENS name represents a \"cross-platform web3 username and profile.\" A wallet address can only have one primary name, and it can change at any time.\n     * @type {boolean}\n     * @memberof ENS\n     */\n    isPrimary?: boolean;\n}\n\n/**\n * Check if a given object implements the ENS interface.\n */\nexport function instanceOfENS(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function ENSFromJSON(json: any): ENS {\n    return ENSFromJSONTyped(json, false);\n}\n\nexport function ENSFromJSONTyped(json: any, ignoreDiscriminator: boolean): ENS {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'pointsTo': !exists(json, 'pointsTo') ? undefined : json['pointsTo'],\n        'expires': !exists(json, 'expires') ? undefined : (json['expires'] === null ? null : new Date(json['expires'])),\n        'isPrimary': !exists(json, 'isPrimary') ? undefined : json['isPrimary'],\n    };\n}\n\nexport function ENSToJSON(value?: ENS | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'pointsTo': value.pointsTo,\n        'expires': value.expires === undefined ? undefined : (value.expires === null ? null : value.expires.toISOString()),\n        'isPrimary': value.isPrimary,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ErrorMessage\n */\nexport interface ErrorMessage {\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorMessage\n     */\n    error: string;\n}\n\n/**\n * Check if a given object implements the ErrorMessage interface.\n */\nexport function instanceOfErrorMessage(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"error\" in value;\n\n    return isInstance;\n}\n\nexport function ErrorMessageFromJSON(json: any): ErrorMessage {\n    return ErrorMessageFromJSONTyped(json, false);\n}\n\nexport function ErrorMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorMessage {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'error': json['error'],\n    };\n}\n\nexport function ErrorMessageToJSON(value?: ErrorMessage | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'error': value.error,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MediaPreview\n */\nexport interface MediaPreview {\n    /**\n     * URI for the image asset.\n     * @type {string}\n     * @memberof MediaPreview\n     */\n    uRI?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MediaPreview\n     */\n    kind?: MediaPreviewKindEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof MediaPreview\n     */\n    format?: string;\n    /**\n     * The image's approximate height in pixels.\n     * @type {number}\n     * @memberof MediaPreview\n     */\n    height?: number;\n    /**\n     * The image's approximate width in pixels.\n     * @type {number}\n     * @memberof MediaPreview\n     */\n    width?: number;\n    /**\n     * If a video, length of video in ISO 8601 duration format.\n     * @type {string}\n     * @memberof MediaPreview\n     */\n    duration?: string;\n}\n\n\n/**\n * @export\n */\nexport const MediaPreviewKindEnum = {\n    Video: 'video',\n    Image: 'image',\n    Raw: 'raw',\n    Audio: 'audio'\n} as const;\nexport type MediaPreviewKindEnum = typeof MediaPreviewKindEnum[keyof typeof MediaPreviewKindEnum];\n\n\n/**\n * Check if a given object implements the MediaPreview interface.\n */\nexport function instanceOfMediaPreview(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function MediaPreviewFromJSON(json: any): MediaPreview {\n    return MediaPreviewFromJSONTyped(json, false);\n}\n\nexport function MediaPreviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaPreview {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'uRI': !exists(json, 'URI') ? undefined : json['URI'],\n        'kind': !exists(json, 'kind') ? undefined : json['kind'],\n        'format': !exists(json, 'format') ? undefined : json['format'],\n        'height': !exists(json, 'height') ? undefined : json['height'],\n        'width': !exists(json, 'width') ? undefined : json['width'],\n        'duration': !exists(json, 'duration') ? undefined : json['duration'],\n    };\n}\n\nexport function MediaPreviewToJSON(value?: MediaPreview | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'URI': value.uRI,\n        'kind': value.kind,\n        'format': value.format,\n        'height': value.height,\n        'width': value.width,\n        'duration': value.duration,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { Collection } from './Collection';\nimport {\n    CollectionFromJSON,\n    CollectionFromJSONTyped,\n    CollectionToJSON,\n} from './Collection';\nimport type { Media } from './Media';\nimport {\n    MediaFromJSON,\n    MediaFromJSONTyped,\n    MediaToJSON,\n} from './Media';\nimport type { MediaPreview } from './MediaPreview';\nimport {\n    MediaPreviewFromJSON,\n    MediaPreviewFromJSONTyped,\n    MediaPreviewToJSON,\n} from './MediaPreview';\nimport type { TokenAttribute } from './TokenAttribute';\nimport {\n    TokenAttributeFromJSON,\n    TokenAttributeFromJSONTyped,\n    TokenAttributeToJSON,\n} from './TokenAttribute';\nimport type { Transaction } from './Transaction';\nimport {\n    TransactionFromJSON,\n    TransactionFromJSONTyped,\n    TransactionToJSON,\n} from './Transaction';\nimport type { Wallet } from './Wallet';\nimport {\n    WalletFromJSON,\n    WalletFromJSONTyped,\n    WalletToJSON,\n} from './Wallet';\n\n/**\n * \n * @export\n * @interface NonFungibleToken\n */\nexport interface NonFungibleToken {\n    /**\n     * ID of this particular token.\n     * @type {string}\n     * @memberof NonFungibleToken\n     */\n    tokenID: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NonFungibleToken\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NonFungibleToken\n     */\n    contractTitle?: string;\n    /**\n     * A description of a contract may contain markup such as HTML or Markdown.\n     * @type {string}\n     * @memberof NonFungibleToken\n     */\n    description?: string;\n    /**\n     * \n     * @type {Media}\n     * @memberof NonFungibleToken\n     */\n    media?: Media;\n    /**\n     * Transformed media assets that are resized and transcoded in to friendlier formats for web and mobile delivery.\n     * @type {Array<MediaPreview>}\n     * @memberof NonFungibleToken\n     */\n    previews?: Array<MediaPreview>;\n    /**\n     * \n     * @type {Wallet}\n     * @memberof NonFungibleToken\n     */\n    owner?: Wallet;\n    /**\n     * \n     * @type {Array<TokenAttribute>}\n     * @memberof NonFungibleToken\n     */\n    attributes?: Array<TokenAttribute>;\n    /**\n     * \n     * @type {Collection}\n     * @memberof NonFungibleToken\n     */\n    collection?: Collection;\n    /**\n     * \n     * @type {Transaction}\n     * @memberof NonFungibleToken\n     */\n    purchase?: Transaction;\n    /**\n     * A rough heuristic indicating the underlying technology and hypothetical durability of an asset. \"On-Chain\" assets store metadata and the asset media (e.g. SVG file, source code or MIDI) on a blockchain. \"Distributed\" assets are stored on decentralized protocols such as IPFS. \"Web\" assets are stored on services such as Amazon's S3. Each technology has different tradeoffs, in particular certain projects need more flexibility than is provided by on-chain data.\"\n     * @type {string}\n     * @memberof NonFungibleToken\n     */\n    durability?: NonFungibleTokenDurabilityEnum;\n    /**\n     * The project name of the NFT.\n     * @type {string}\n     * @memberof NonFungibleToken\n     */\n    projectName?: string;\n}\n\n\n/**\n * @export\n */\nexport const NonFungibleTokenDurabilityEnum = {\n    OnChain: 'On-Chain',\n    Decentralized: 'Decentralized',\n    Web: 'Web',\n    Unknown: 'Unknown'\n} as const;\nexport type NonFungibleTokenDurabilityEnum = typeof NonFungibleTokenDurabilityEnum[keyof typeof NonFungibleTokenDurabilityEnum];\n\n\n/**\n * Check if a given object implements the NonFungibleToken interface.\n */\nexport function instanceOfNonFungibleToken(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"tokenID\" in value;\n\n    return isInstance;\n}\n\nexport function NonFungibleTokenFromJSON(json: any): NonFungibleToken {\n    return NonFungibleTokenFromJSONTyped(json, false);\n}\n\nexport function NonFungibleTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonFungibleToken {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'tokenID': json['tokenID'],\n        'title': !exists(json, 'title') ? undefined : json['title'],\n        'contractTitle': !exists(json, 'contractTitle') ? undefined : json['contractTitle'],\n        'description': !exists(json, 'description') ? undefined : json['description'],\n        'media': !exists(json, 'media') ? undefined : MediaFromJSON(json['media']),\n        'previews': !exists(json, 'previews') ? undefined : ((json['previews'] as Array<any>).map(MediaPreviewFromJSON)),\n        'owner': !exists(json, 'owner') ? undefined : WalletFromJSON(json['owner']),\n        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(TokenAttributeFromJSON)),\n        'collection': !exists(json, 'collection') ? undefined : CollectionFromJSON(json['collection']),\n        'purchase': !exists(json, 'purchase') ? undefined : TransactionFromJSON(json['purchase']),\n        'durability': !exists(json, 'durability') ? undefined : json['durability'],\n        'projectName': !exists(json, 'projectName') ? undefined : json['projectName'],\n    };\n}\n\nexport function NonFungibleTokenToJSON(value?: NonFungibleToken | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'tokenID': value.tokenID,\n        'title': value.title,\n        'contractTitle': value.contractTitle,\n        'description': value.description,\n        'media': MediaToJSON(value.media),\n        'previews': value.previews === undefined ? undefined : ((value.previews as Array<any>).map(MediaPreviewToJSON)),\n        'owner': WalletToJSON(value.owner),\n        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(TokenAttributeToJSON)),\n        'collection': CollectionToJSON(value.collection),\n        'purchase': TransactionToJSON(value.purchase),\n        'durability': value.durability,\n        'projectName': value.projectName,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TokenAttribute\n */\nexport interface TokenAttribute {\n    /**\n     * The key or kind of trait.\n     * @type {string}\n     * @memberof TokenAttribute\n     */\n    traitType?: string;\n    /**\n     * A distinct attribute belonging to a particular type of trait.\n     * @type {string}\n     * @memberof TokenAttribute\n     */\n    value?: string;\n}\n\n/**\n * Check if a given object implements the TokenAttribute interface.\n */\nexport function instanceOfTokenAttribute(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function TokenAttributeFromJSON(json: any): TokenAttribute {\n    return TokenAttributeFromJSONTyped(json, false);\n}\n\nexport function TokenAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenAttribute {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'traitType': !exists(json, 'traitType') ? undefined : json['traitType'],\n        'value': !exists(json, 'value') ? undefined : json['value'],\n    };\n}\n\nexport function TokenAttributeToJSON(value?: TokenAttribute | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'traitType': value.traitType,\n        'value': value.value,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { CurrencyInfo } from './CurrencyInfo';\nimport {\n    CurrencyInfoFromJSON,\n    CurrencyInfoFromJSONTyped,\n    CurrencyInfoToJSON,\n} from './CurrencyInfo';\nimport type { TransactionLogLine } from './TransactionLogLine';\nimport {\n    TransactionLogLineFromJSON,\n    TransactionLogLineFromJSONTyped,\n    TransactionLogLineToJSON,\n} from './TransactionLogLine';\n\n/**\n * \n * @export\n * @interface Transaction\n */\nexport interface Transaction {\n    /**\n     * Block number of the transaction.\n     * @type {number}\n     * @memberof Transaction\n     */\n    blockNumber?: number;\n    /**\n     * Index of the transaction in the block.\n     * @type {number}\n     * @memberof Transaction\n     */\n    transactionIndex?: number;\n    /**\n     * \n     * @type {CurrencyInfo}\n     * @memberof Transaction\n     */\n    gasFee?: CurrencyInfo;\n    /**\n     * Timestamp of the transaction in RFC 3339.\n     * @type {Date}\n     * @memberof Transaction\n     */\n    timestamp?: Date | null;\n    /**\n     * Log lines related to the transaction.\n     * @type {Array<TransactionLogLine>}\n     * @memberof Transaction\n     */\n    logLine?: Array<TransactionLogLine>;\n}\n\n/**\n * Check if a given object implements the Transaction interface.\n */\nexport function instanceOfTransaction(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function TransactionFromJSON(json: any): Transaction {\n    return TransactionFromJSONTyped(json, false);\n}\n\nexport function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'blockNumber': !exists(json, 'blockNumber') ? undefined : json['blockNumber'],\n        'transactionIndex': !exists(json, 'transactionIndex') ? undefined : json['transactionIndex'],\n        'gasFee': !exists(json, 'gasFee') ? undefined : CurrencyInfoFromJSON(json['gasFee']),\n        'timestamp': !exists(json, 'timestamp') ? undefined : (json['timestamp'] === null ? null : new Date(json['timestamp'])),\n        'logLine': !exists(json, 'logLine') ? undefined : ((json['logLine'] as Array<any>).map(TransactionLogLineFromJSON)),\n    };\n}\n\nexport function TransactionToJSON(value?: Transaction | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'blockNumber': value.blockNumber,\n        'transactionIndex': value.transactionIndex,\n        'gasFee': CurrencyInfoToJSON(value.gasFee),\n        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp === null ? null : value.timestamp.toISOString()),\n        'logLine': value.logLine === undefined ? undefined : ((value.logLine as Array<any>).map(TransactionLogLineToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { CurrencyInfo } from './CurrencyInfo';\nimport {\n    CurrencyInfoFromJSON,\n    CurrencyInfoFromJSONTyped,\n    CurrencyInfoToJSON,\n} from './CurrencyInfo';\n\n/**\n * \n * @export\n * @interface TransactionLogLine\n */\nexport interface TransactionLogLine {\n    /**\n     * When the value is true, it indicates that a token has been burned, and this transaction corresponds to the burn.\n     * @type {boolean}\n     * @memberof TransactionLogLine\n     */\n    burned?: boolean | null;\n    /**\n     * When the value is true, it indicates this is the transaction representing a token minting.\n     * @type {boolean}\n     * @memberof TransactionLogLine\n     */\n    mint?: boolean | null;\n    /**\n     * Index of the log in the transaction.\n     * @type {number}\n     * @memberof TransactionLogLine\n     */\n    logIndex?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TransactionLogLine\n     */\n    fromAddress?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TransactionLogLine\n     */\n    toAddress?: string;\n    /**\n     * \n     * @type {CurrencyInfo}\n     * @memberof TransactionLogLine\n     */\n    price?: CurrencyInfo;\n}\n\n/**\n * Check if a given object implements the TransactionLogLine interface.\n */\nexport function instanceOfTransactionLogLine(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function TransactionLogLineFromJSON(json: any): TransactionLogLine {\n    return TransactionLogLineFromJSONTyped(json, false);\n}\n\nexport function TransactionLogLineFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionLogLine {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'burned': !exists(json, 'burned') ? undefined : json['burned'],\n        'mint': !exists(json, 'mint') ? undefined : json['mint'],\n        'logIndex': !exists(json, 'logIndex') ? undefined : json['logIndex'],\n        'fromAddress': !exists(json, 'fromAddress') ? undefined : json['fromAddress'],\n        'toAddress': !exists(json, 'toAddress') ? undefined : json['toAddress'],\n        'price': !exists(json, 'price') ? undefined : CurrencyInfoFromJSON(json['price']),\n    };\n}\n\nexport function TransactionLogLineToJSON(value?: TransactionLogLine | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'burned': value.burned,\n        'mint': value.mint,\n        'logIndex': value.logIndex,\n        'fromAddress': value.fromAddress,\n        'toAddress': value.toAddress,\n        'price': CurrencyInfoToJSON(value.price),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { CurrencyInfo } from './CurrencyInfo';\nimport {\n    CurrencyInfoFromJSON,\n    CurrencyInfoFromJSONTyped,\n    CurrencyInfoToJSON,\n} from './CurrencyInfo';\nimport type { ENS } from './ENS';\nimport {\n    ENSFromJSON,\n    ENSFromJSONTyped,\n    ENSToJSON,\n} from './ENS';\nimport type { OwnedCollection } from './OwnedCollection';\nimport {\n    OwnedCollectionFromJSON,\n    OwnedCollectionFromJSONTyped,\n    OwnedCollectionToJSON,\n} from './OwnedCollection';\nimport type { SocialMedia } from './SocialMedia';\nimport {\n    SocialMediaFromJSON,\n    SocialMediaFromJSONTyped,\n    SocialMediaToJSON,\n} from './SocialMedia';\nimport type { Token } from './Token';\nimport {\n    TokenFromJSON,\n    TokenFromJSONTyped,\n    TokenToJSON,\n} from './Token';\nimport type { Transaction } from './Transaction';\nimport {\n    TransactionFromJSON,\n    TransactionFromJSONTyped,\n    TransactionToJSON,\n} from './Transaction';\n\n/**\n * \n * @export\n * @interface Wallet\n */\nexport interface Wallet {\n    /**\n     * The total balance in a fiat currency (e.g. USD) for the wallet.\n     * @type {Array<CurrencyInfo>}\n     * @memberof Wallet\n     */\n    totalBalance?: Array<CurrencyInfo>;\n    /**\n     * The balance of fungible tokens from smart contracts or blockchains. Certain non-standard ERC-20 tokens (e.g. stETH) may occasionally have stale balances, for example interest payments can be slow to update.\n     * @type {Array<CurrencyInfo>}\n     * @memberof Wallet\n     */\n    balances?: Array<CurrencyInfo>;\n    /**\n     * \n     * @type {string}\n     * @memberof Wallet\n     */\n    address: string;\n    /**\n     * \n     * @type {Array<ENS>}\n     * @memberof Wallet\n     */\n    ens?: Array<ENS>;\n    /**\n     * \n     * @type {Array<SocialMedia>}\n     * @memberof Wallet\n     */\n    socialMedia?: Array<SocialMedia>;\n    /**\n     * A sample of the most recently transferred tokens owned by this wallet.\n     * @type {Array<Token>}\n     * @memberof Wallet\n     */\n    recentTokens?: Array<Token>;\n    /**\n     * A sample of the most expensive tokens owned by this wallet.\n     * @type {Array<Token>}\n     * @memberof Wallet\n     */\n    topTokens?: Array<Token>;\n    /**\n     * A sample of the collections this wallet owns.\n     * @type {Array<OwnedCollection>}\n     * @memberof Wallet\n     */\n    collections?: Array<OwnedCollection>;\n    /**\n     * A reverse-chronological list of the latest transactions for a wallet.\n     * @type {Array<Transaction>}\n     * @memberof Wallet\n     */\n    history?: Array<Transaction>;\n}\n\n/**\n * Check if a given object implements the Wallet interface.\n */\nexport function instanceOfWallet(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"address\" in value;\n\n    return isInstance;\n}\n\nexport function WalletFromJSON(json: any): Wallet {\n    return WalletFromJSONTyped(json, false);\n}\n\nexport function WalletFromJSONTyped(json: any, ignoreDiscriminator: boolean): Wallet {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'totalBalance': !exists(json, 'totalBalance') ? undefined : ((json['totalBalance'] as Array<any>).map(CurrencyInfoFromJSON)),\n        'balances': !exists(json, 'balances') ? undefined : ((json['balances'] as Array<any>).map(CurrencyInfoFromJSON)),\n        'address': json['address'],\n        'ens': !exists(json, 'ens') ? undefined : ((json['ens'] as Array<any>).map(ENSFromJSON)),\n        'socialMedia': !exists(json, 'socialMedia') ? undefined : ((json['socialMedia'] as Array<any>).map(SocialMediaFromJSON)),\n        'recentTokens': !exists(json, 'recentTokens') ? undefined : ((json['recentTokens'] as Array<any>).map(TokenFromJSON)),\n        'topTokens': !exists(json, 'topTokens') ? undefined : ((json['topTokens'] as Array<any>).map(TokenFromJSON)),\n        'collections': !exists(json, 'collections') ? undefined : ((json['collections'] as Array<any>).map(OwnedCollectionFromJSON)),\n        'history': !exists(json, 'history') ? undefined : ((json['history'] as Array<any>).map(TransactionFromJSON)),\n    };\n}\n\nexport function WalletToJSON(value?: Wallet | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'totalBalance': value.totalBalance === undefined ? undefined : ((value.totalBalance as Array<any>).map(CurrencyInfoToJSON)),\n        'balances': value.balances === undefined ? undefined : ((value.balances as Array<any>).map(CurrencyInfoToJSON)),\n        'address': value.address,\n        'ens': value.ens === undefined ? undefined : ((value.ens as Array<any>).map(ENSToJSON)),\n        'socialMedia': value.socialMedia === undefined ? undefined : ((value.socialMedia as Array<any>).map(SocialMediaToJSON)),\n        'recentTokens': value.recentTokens === undefined ? undefined : ((value.recentTokens as Array<any>).map(TokenToJSON)),\n        'topTokens': value.topTokens === undefined ? undefined : ((value.topTokens as Array<any>).map(TokenToJSON)),\n        'collections': value.collections === undefined ? undefined : ((value.collections as Array<any>).map(OwnedCollectionToJSON)),\n        'history': value.history === undefined ? undefined : ((value.history as Array<any>).map(TransactionToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { Collection } from './Collection';\nimport {\n    CollectionFromJSON,\n    CollectionFromJSONTyped,\n    CollectionToJSON,\n} from './Collection';\nimport type { CurrencyInfo } from './CurrencyInfo';\nimport {\n    CurrencyInfoFromJSON,\n    CurrencyInfoFromJSONTyped,\n    CurrencyInfoToJSON,\n} from './CurrencyInfo';\nimport type { Token } from './Token';\nimport {\n    TokenFromJSON,\n    TokenFromJSONTyped,\n    TokenToJSON,\n} from './Token';\n\n/**\n * \n * @export\n * @interface OwnedCollection\n */\nexport interface OwnedCollection {\n    /**\n     * A sample of the tokens owned by this wallet.\n     * @type {Array<Token>}\n     * @memberof OwnedCollection\n     */\n    tokens?: Array<Token>;\n    /**\n     * \n     * @type {Collection}\n     * @memberof OwnedCollection\n     */\n    collection?: Collection;\n    /**\n     * \n     * @type {CurrencyInfo}\n     * @memberof OwnedCollection\n     */\n    totalSpent?: CurrencyInfo;\n}\n\n/**\n * Check if a given object implements the OwnedCollection interface.\n */\nexport function instanceOfOwnedCollection(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function OwnedCollectionFromJSON(json: any): OwnedCollection {\n    return OwnedCollectionFromJSONTyped(json, false);\n}\n\nexport function OwnedCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OwnedCollection {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'tokens': !exists(json, 'tokens') ? undefined : ((json['tokens'] as Array<any>).map(TokenFromJSON)),\n        'collection': !exists(json, 'collection') ? undefined : CollectionFromJSON(json['collection']),\n        'totalSpent': !exists(json, 'totalSpent') ? undefined : CurrencyInfoFromJSON(json['totalSpent']),\n    };\n}\n\nexport function OwnedCollectionToJSON(value?: OwnedCollection | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'tokens': value.tokens === undefined ? undefined : ((value.tokens as Array<any>).map(TokenToJSON)),\n        'collection': CollectionToJSON(value.collection),\n        'totalSpent': CurrencyInfoToJSON(value.totalSpent),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { BlockchainInfo } from './BlockchainInfo';\nimport {\n    BlockchainInfoFromJSON,\n    BlockchainInfoFromJSONTyped,\n    BlockchainInfoToJSON,\n} from './BlockchainInfo';\nimport type { NonFungibleToken } from './NonFungibleToken';\nimport {\n    NonFungibleTokenFromJSON,\n    NonFungibleTokenFromJSONTyped,\n    NonFungibleTokenToJSON,\n} from './NonFungibleToken';\nimport type { OpenSeaContract } from './OpenSeaContract';\nimport {\n    OpenSeaContractFromJSON,\n    OpenSeaContractFromJSONTyped,\n    OpenSeaContractToJSON,\n} from './OpenSeaContract';\n\n/**\n * \n * @export\n * @interface Token\n */\nexport interface Token {\n    /**\n     * \n     * @type {BlockchainInfo}\n     * @memberof Token\n     */\n    blockchain: BlockchainInfo;\n    /**\n     * Address of the contract that minted this NFT.\n     * @type {string}\n     * @memberof Token\n     */\n    contractAddress: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    tokenStandard?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    symbol?: string;\n    /**\n     * \n     * @type {NonFungibleToken}\n     * @memberof Token\n     */\n    nft?: NonFungibleToken;\n    /**\n     * \n     * @type {OpenSeaContract}\n     * @memberof Token\n     */\n    openSeaContract?: OpenSeaContract;\n}\n\n/**\n * Check if a given object implements the Token interface.\n */\nexport function instanceOfToken(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"blockchain\" in value;\n    isInstance = isInstance && \"contractAddress\" in value;\n\n    return isInstance;\n}\n\nexport function TokenFromJSON(json: any): Token {\n    return TokenFromJSONTyped(json, false);\n}\n\nexport function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'blockchain': BlockchainInfoFromJSON(json['blockchain']),\n        'contractAddress': json['contractAddress'],\n        'tokenStandard': !exists(json, 'tokenStandard') ? undefined : json['tokenStandard'],\n        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],\n        'nft': !exists(json, 'nft') ? undefined : NonFungibleTokenFromJSON(json['nft']),\n        'openSeaContract': !exists(json, 'openSeaContract') ? undefined : OpenSeaContractFromJSON(json['openSeaContract']),\n    };\n}\n\nexport function TokenToJSON(value?: Token | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'blockchain': BlockchainInfoToJSON(value.blockchain),\n        'contractAddress': value.contractAddress,\n        'tokenStandard': value.tokenStandard,\n        'symbol': value.symbol,\n        'nft': NonFungibleTokenToJSON(value.nft),\n        'openSeaContract': OpenSeaContractToJSON(value.openSeaContract),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OpenSeaContract\n */\nexport interface OpenSeaContract {\n    /**\n     * The type of contract.\n     * @type {string}\n     * @memberof OpenSeaContract\n     */\n    assetContractType?: OpenSeaContractAssetContractTypeEnum;\n    /**\n     * The NFT Version\n     * @type {string}\n     * @memberof OpenSeaContract\n     */\n    nftVersion?: string;\n    /**\n     * The OpenSea Version\n     * @type {string}\n     * @memberof OpenSeaContract\n     */\n    openSeaVersion?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OpenSeaContract\n     */\n    defaultToFiat?: boolean;\n    /**\n     * Total fee levied on buyers by this contract, in basis points\n     * @type {number}\n     * @memberof OpenSeaContract\n     */\n    buyerFeeBasisPoints?: number;\n    /**\n     * Total fee levied on sellers by this contract, in basis points\n     * @type {number}\n     * @memberof OpenSeaContract\n     */\n    sellerFeeBasisPoints?: number;\n}\n\n\n/**\n * @export\n */\nexport const OpenSeaContractAssetContractTypeEnum = {\n    Nft: 'NFT',\n    Sft: 'SFT',\n    Unknown: 'unknown'\n} as const;\nexport type OpenSeaContractAssetContractTypeEnum = typeof OpenSeaContractAssetContractTypeEnum[keyof typeof OpenSeaContractAssetContractTypeEnum];\n\n\n/**\n * Check if a given object implements the OpenSeaContract interface.\n */\nexport function instanceOfOpenSeaContract(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function OpenSeaContractFromJSON(json: any): OpenSeaContract {\n    return OpenSeaContractFromJSONTyped(json, false);\n}\n\nexport function OpenSeaContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenSeaContract {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'assetContractType': !exists(json, 'assetContractType') ? undefined : json['assetContractType'],\n        'nftVersion': !exists(json, 'nftVersion') ? undefined : json['nftVersion'],\n        'openSeaVersion': !exists(json, 'openSeaVersion') ? undefined : json['openSeaVersion'],\n        'defaultToFiat': !exists(json, 'defaultToFiat') ? undefined : json['defaultToFiat'],\n        'buyerFeeBasisPoints': !exists(json, 'buyerFeeBasisPoints') ? undefined : json['buyerFeeBasisPoints'],\n        'sellerFeeBasisPoints': !exists(json, 'sellerFeeBasisPoints') ? undefined : json['sellerFeeBasisPoints'],\n    };\n}\n\nexport function OpenSeaContractToJSON(value?: OpenSeaContract | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'assetContractType': value.assetContractType,\n        'nftVersion': value.nftVersion,\n        'openSeaVersion': value.openSeaVersion,\n        'defaultToFiat': value.defaultToFiat,\n        'buyerFeeBasisPoints': value.buyerFeeBasisPoints,\n        'sellerFeeBasisPoints': value.sellerFeeBasisPoints,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { Collection } from './Collection';\nimport {\n    CollectionFromJSON,\n    CollectionFromJSONTyped,\n    CollectionToJSON,\n} from './Collection';\nimport type { Token } from './Token';\nimport {\n    TokenFromJSON,\n    TokenFromJSONTyped,\n    TokenToJSON,\n} from './Token';\nimport type { Wallet } from './Wallet';\nimport {\n    WalletFromJSON,\n    WalletFromJSONTyped,\n    WalletToJSON,\n} from './Wallet';\n\n/**\n * \n * @export\n * @interface SearchDocument\n */\nexport interface SearchDocument {\n    /**\n     * \n     * @type {Token}\n     * @memberof SearchDocument\n     */\n    token?: Token;\n    /**\n     * \n     * @type {Wallet}\n     * @memberof SearchDocument\n     */\n    wallet?: Wallet;\n    /**\n     * \n     * @type {Collection}\n     * @memberof SearchDocument\n     */\n    collection?: Collection;\n}\n\n/**\n * Check if a given object implements the SearchDocument interface.\n */\nexport function instanceOfSearchDocument(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function SearchDocumentFromJSON(json: any): SearchDocument {\n    return SearchDocumentFromJSONTyped(json, false);\n}\n\nexport function SearchDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchDocument {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : TokenFromJSON(json['token']),\n        'wallet': !exists(json, 'wallet') ? undefined : WalletFromJSON(json['wallet']),\n        'collection': !exists(json, 'collection') ? undefined : CollectionFromJSON(json['collection']),\n    };\n}\n\nexport function SearchDocumentToJSON(value?: SearchDocument | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': TokenToJSON(value.token),\n        'wallet': WalletToJSON(value.wallet),\n        'collection': CollectionToJSON(value.collection),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport type { Token } from './Token';\nimport {\n    TokenFromJSON,\n    TokenFromJSONTyped,\n    TokenToJSON,\n} from './Token';\nimport type { Transaction } from './Transaction';\nimport {\n    TransactionFromJSON,\n    TransactionFromJSONTyped,\n    TransactionToJSON,\n} from './Transaction';\n\n/**\n * \n * @export\n * @interface TokenEvents\n */\nexport interface TokenEvents {\n    /**\n     * Metadata for the token specified in the request.\n     * @type {Array<Token>}\n     * @memberof TokenEvents\n     */\n    token?: Array<Token>;\n    /**\n     * A list of the events for a token.\n     * @type {Array<Transaction>}\n     * @memberof TokenEvents\n     */\n    events?: Array<Transaction>;\n}\n\n/**\n * Check if a given object implements the TokenEvents interface.\n */\nexport function instanceOfTokenEvents(value: object): boolean {\n    let isInstance = true;\n\n    return isInstance;\n}\n\nexport function TokenEventsFromJSON(json: any): TokenEvents {\n    return TokenEventsFromJSONTyped(json, false);\n}\n\nexport function TokenEventsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenEvents {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : ((json['token'] as Array<any>).map(TokenFromJSON)),\n        'events': !exists(json, 'events') ? undefined : ((json['events'] as Array<any>).map(TransactionFromJSON)),\n    };\n}\n\nexport function TokenEventsToJSON(value?: TokenEvents | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token === undefined ? undefined : ((value.token as Array<any>).map(TokenToJSON)),\n        'events': value.events === undefined ? undefined : ((value.events as Array<any>).map(TransactionToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TokenGate\n */\nexport interface TokenGate {\n    /**\n     * \n     * @type {boolean}\n     * @memberof TokenGate\n     */\n    hasToken: boolean;\n}\n\n/**\n * Check if a given object implements the TokenGate interface.\n */\nexport function instanceOfTokenGate(value: object): boolean {\n    let isInstance = true;\n    isInstance = isInstance && \"hasToken\" in value;\n\n    return isInstance;\n}\n\nexport function TokenGateFromJSON(json: any): TokenGate {\n    return TokenGateFromJSONTyped(json, false);\n}\n\nexport function TokenGateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenGate {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'hasToken': json['hasToken'],\n    };\n}\n\nexport function TokenGateToJSON(value?: TokenGate | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'hasToken': value.hasToken,\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * n.xyz REST API\n * REST API for blockchain data.\n *\n * The version of the OpenAPI document: 0.17.1\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  BlockchainInfo,\n  Collection,\n  CurrencyInfo,\n  ErrorMessage,\n  SearchDocument,\n  Token,\n  TokenEvents,\n  TokenGate,\n  Transaction,\n  Wallet,\n} from '../models';\nimport {\n    BlockchainInfoFromJSON,\n    BlockchainInfoToJSON,\n    CollectionFromJSON,\n    CollectionToJSON,\n    CurrencyInfoFromJSON,\n    CurrencyInfoToJSON,\n    ErrorMessageFromJSON,\n    ErrorMessageToJSON,\n    SearchDocumentFromJSON,\n    SearchDocumentToJSON,\n    TokenFromJSON,\n    TokenToJSON,\n    TokenEventsFromJSON,\n    TokenEventsToJSON,\n    TokenGateFromJSON,\n    TokenGateToJSON,\n    TransactionFromJSON,\n    TransactionToJSON,\n    WalletFromJSON,\n    WalletToJSON,\n} from '../models';\n\nexport interface GetCollectionRequest {\n    contractAddress: string;\n    chainID?: string;\n}\n\nexport interface GetContractTokensRequest {\n    contractAddress: string;\n    chainID?: string;\n    limit?: number;\n}\n\nexport interface GetContractTokensByContractAndIDRequest {\n    contractAddresses: string;\n    tokenIdentifiers: string;\n    chainID?: string;\n    limit?: number;\n}\n\nexport interface GetContractTransactionHistoryRequest {\n    contractAddress: string;\n    cursor?: string;\n    chainID?: string;\n    limit?: number;\n}\n\nexport interface GetSearchResultsRequest {\n    query: string;\n    cursor?: string;\n}\n\nexport interface GetSoldTokensRequest {\n    walletAddress: string;\n    chainID?: string;\n    cursor?: string;\n    limit?: number;\n}\n\nexport interface GetTokenRequest {\n    contractAddress: string;\n    tokenID: string;\n    chainID?: string;\n}\n\nexport interface GetTokenGateRequest {\n    tokenID: string;\n    contractAddress: string;\n    walletAddress: string;\n    chainID?: string;\n}\n\nexport interface GetTokenTransfersRequest {\n    contractAddress: string;\n    tokenID: string;\n    chainID?: string;\n    limit?: number;\n}\n\nexport interface GetTokensBySearchQueryRequest {\n    query: string;\n    cursor?: string;\n}\n\nexport interface GetWalletRequest {\n    walletAddress: string;\n    chainID?: string;\n}\n\nexport interface GetWalletBalancesRequest {\n    walletAddress: string;\n    limit?: number;\n}\n\nexport interface GetWalletMintsRequest {\n    walletAddress: string;\n    chainID?: string;\n    cursor?: string;\n    limit?: number;\n}\n\nexport interface GetWalletTokensRequest {\n    walletAddress: string;\n    cursor?: string;\n    chainID?: string;\n    limit?: number;\n}\n\nexport interface GetWalletTransactionsRequest {\n    walletAddress: string;\n    cursor?: string;\n    limit?: number;\n    chainID?: string;\n    tokenType?: GetWalletTransactionsTokenTypeEnum;\n}\n\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n\n    /**\n     * Lists all supported blockchains.\n     */\n    async getBlockchainsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BlockchainInfo>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/blockchains`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BlockchainInfoFromJSON));\n    }\n\n    /**\n     * Lists all supported blockchains.\n     */\n    async getBlockchains(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BlockchainInfo>> {\n        const response = await this.getBlockchainsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a collection by its contract address.\n     */\n    async getCollectionRaw(requestParameters: GetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Collection>>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getCollection.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/collections/{contractAddress}`.replace(`{${\"contractAddress\"}}`, encodeURIComponent(String(requestParameters.contractAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CollectionFromJSON));\n    }\n\n    /**\n     * Get a collection by its contract address.\n     */\n    async getCollection(requestParameters: GetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Collection>> {\n        const response = await this.getCollectionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get tokens by contract address.\n     */\n    async getContractTokensRaw(requestParameters: GetContractTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getContractTokens.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/tokens/{contractAddress}`.replace(`{${\"contractAddress\"}}`, encodeURIComponent(String(requestParameters.contractAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Get tokens by contract address.\n     */\n    async getContractTokens(requestParameters: GetContractTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getContractTokensRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get tokens by a pair of contract addresses and token IDs. The input are two ordered arrays. The first element of contractAddresses should be related to the 1st element of the tokenID, etc. In the below example two tokens are being requested, token 3481 from the \\\"goblintown\\\" contract (i.e. 0xbce3781ae7ca1a5e050bd9c4c77369867ebc307e) and token 50603 from the Otherdeed contract (i.e. 0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258).\n     */\n    async getContractTokensByContractAndIDRaw(requestParameters: GetContractTokensByContractAndIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.contractAddresses === null || requestParameters.contractAddresses === undefined) {\n            throw new runtime.RequiredError('contractAddresses','Required parameter requestParameters.contractAddresses was null or undefined when calling getContractTokensByContractAndID.');\n        }\n\n        if (requestParameters.tokenIdentifiers === null || requestParameters.tokenIdentifiers === undefined) {\n            throw new runtime.RequiredError('tokenIdentifiers','Required parameter requestParameters.tokenIdentifiers was null or undefined when calling getContractTokensByContractAndID.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.contractAddresses !== undefined) {\n            queryParameters['contractAddresses'] = requestParameters.contractAddresses;\n        }\n\n        if (requestParameters.tokenIdentifiers !== undefined) {\n            queryParameters['tokenIdentifiers'] = requestParameters.tokenIdentifiers;\n        }\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/token-batch`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Get tokens by a pair of contract addresses and token IDs. The input are two ordered arrays. The first element of contractAddresses should be related to the 1st element of the tokenID, etc. In the below example two tokens are being requested, token 3481 from the \\\"goblintown\\\" contract (i.e. 0xbce3781ae7ca1a5e050bd9c4c77369867ebc307e) and token 50603 from the Otherdeed contract (i.e. 0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258).\n     */\n    async getContractTokensByContractAndID(requestParameters: GetContractTokensByContractAndIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getContractTokensByContractAndIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get the transaction history for a collection\n     */\n    async getContractTransactionHistoryRaw(requestParameters: GetContractTransactionHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Transaction>>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getContractTransactionHistory.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/collections/{contractAddress}/transactions/history`.replace(`{${\"contractAddress\"}}`, encodeURIComponent(String(requestParameters.contractAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TransactionFromJSON));\n    }\n\n    /**\n     * Get the transaction history for a collection\n     */\n    async getContractTransactionHistory(requestParameters: GetContractTransactionHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Transaction>> {\n        const response = await this.getContractTransactionHistoryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get search results such as wallets, tokens, and collections by a search query.\n     */\n    async getSearchResultsRaw(requestParameters: GetSearchResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<SearchDocument>>> {\n        if (requestParameters.query === null || requestParameters.query === undefined) {\n            throw new runtime.RequiredError('query','Required parameter requestParameters.query was null or undefined when calling getSearchResults.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/search/{query}`.replace(`{${\"query\"}}`, encodeURIComponent(String(requestParameters.query))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SearchDocumentFromJSON));\n    }\n\n    /**\n     * Get search results such as wallets, tokens, and collections by a search query.\n     */\n    async getSearchResults(requestParameters: GetSearchResultsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<SearchDocument>> {\n        const response = await this.getSearchResultsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of tokens sold by a wallet.\n     */\n    async getSoldTokensRaw(requestParameters: GetSoldTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getSoldTokens.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}/sold-tokens`.replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Returns a list of tokens sold by a wallet.\n     */\n    async getSoldTokens(requestParameters: GetSoldTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getSoldTokensRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a token by its contract address and token ID.\n     */\n    async getTokenRaw(requestParameters: GetTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getToken.');\n        }\n\n        if (requestParameters.tokenID === null || requestParameters.tokenID === undefined) {\n            throw new runtime.RequiredError('tokenID','Required parameter requestParameters.tokenID was null or undefined when calling getToken.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/tokens/{contractAddress}/{tokenID}`.replace(`{${\"contractAddress\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"tokenID\"}}`, encodeURIComponent(String(requestParameters.tokenID))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Get a token by its contract address and token ID.\n     */\n    async getToken(requestParameters: GetTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Determine if a wallet has a given token from a contract.\n     */\n    async getTokenGateRaw(requestParameters: GetTokenGateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenGate>> {\n        if (requestParameters.tokenID === null || requestParameters.tokenID === undefined) {\n            throw new runtime.RequiredError('tokenID','Required parameter requestParameters.tokenID was null or undefined when calling getTokenGate.');\n        }\n\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getTokenGate.');\n        }\n\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getTokenGate.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}/gate/{contractAddress}/{tokenID}`.replace(`{${\"tokenID\"}}`, encodeURIComponent(String(requestParameters.tokenID))).replace(`{${\"contractAddress\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TokenGateFromJSON(jsonValue));\n    }\n\n    /**\n     * Determine if a wallet has a given token from a contract.\n     */\n    async getTokenGate(requestParameters: GetTokenGateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenGate> {\n        const response = await this.getTokenGateRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of transfer transactions on a specified token.\n     */\n    async getTokenTransfersRaw(requestParameters: GetTokenTransfersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenEvents>> {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress','Required parameter requestParameters.contractAddress was null or undefined when calling getTokenTransfers.');\n        }\n\n        if (requestParameters.tokenID === null || requestParameters.tokenID === undefined) {\n            throw new runtime.RequiredError('tokenID','Required parameter requestParameters.tokenID was null or undefined when calling getTokenTransfers.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/tokens/{contractAddress}/{tokenID}/transfers`.replace(`{${\"contractAddress\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"tokenID\"}}`, encodeURIComponent(String(requestParameters.tokenID))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TokenEventsFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a list of transfer transactions on a specified token.\n     */\n    async getTokenTransfers(requestParameters: GetTokenTransfersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenEvents> {\n        const response = await this.getTokenTransfersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get tokens by a search query.\n     */\n    async getTokensBySearchQueryRaw(requestParameters: GetTokensBySearchQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.query === null || requestParameters.query === undefined) {\n            throw new runtime.RequiredError('query','Required parameter requestParameters.query was null or undefined when calling getTokensBySearchQuery.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/tokens/search/{query}`.replace(`{${\"query\"}}`, encodeURIComponent(String(requestParameters.query))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Get tokens by a search query.\n     */\n    async getTokensBySearchQuery(requestParameters: GetTokensBySearchQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getTokensBySearchQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a wallet by a wallet address\n     */\n    async getWalletRaw(requestParameters: GetWalletRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Wallet>>> {\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getWallet.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}`.replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WalletFromJSON));\n    }\n\n    /**\n     * Get a wallet by a wallet address\n     */\n    async getWallet(requestParameters: GetWalletRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Wallet>> {\n        const response = await this.getWalletRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of balances for tokens this wallet currently owns.\n     */\n    async getWalletBalancesRaw(requestParameters: GetWalletBalancesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CurrencyInfo>>> {\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getWalletBalances.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}/balances`.replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CurrencyInfoFromJSON));\n    }\n\n    /**\n     * Returns a list of balances for tokens this wallet currently owns.\n     */\n    async getWalletBalances(requestParameters: GetWalletBalancesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CurrencyInfo>> {\n        const response = await this.getWalletBalancesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of tokens minted by a wallet.\n     */\n    async getWalletMintsRaw(requestParameters: GetWalletMintsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getWalletMints.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}/mints`.replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Returns a list of tokens minted by a wallet.\n     */\n    async getWalletMints(requestParameters: GetWalletMintsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getWalletMintsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of tokens owned by a wallet.\n     */\n    async getWalletTokensRaw(requestParameters: GetWalletTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getWalletTokens.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}/tokens`.replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));\n    }\n\n    /**\n     * Returns a list of tokens owned by a wallet.\n     */\n    async getWalletTokens(requestParameters: GetWalletTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {\n        const response = await this.getWalletTokensRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of transactions that have been performed by this wallet. Use token type to restrict to only certain transactions, such as NFTs\n     */\n    async getWalletTransactionsRaw(requestParameters: GetWalletTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Transaction>>> {\n        if (requestParameters.walletAddress === null || requestParameters.walletAddress === undefined) {\n            throw new runtime.RequiredError('walletAddress','Required parameter requestParameters.walletAddress was null or undefined when calling getWalletTransactions.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.cursor !== undefined) {\n            queryParameters['cursor'] = requestParameters.cursor;\n        }\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.chainID !== undefined) {\n            queryParameters['chainID'] = requestParameters.chainID;\n        }\n\n        if (requestParameters.tokenType !== undefined) {\n            queryParameters['tokenType'] = requestParameters.tokenType;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            queryParameters[\"apikey\"] = this.configuration.apiKey(\"apikey\"); // apikey authentication\n        }\n\n        const response = await this.request({\n            path: `/api/v1/wallets/{walletAddress}/transactions/history`.replace(`{${\"walletAddress\"}}`, encodeURIComponent(String(requestParameters.walletAddress))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TransactionFromJSON));\n    }\n\n    /**\n     * Returns a list of transactions that have been performed by this wallet. Use token type to restrict to only certain transactions, such as NFTs\n     */\n    async getWalletTransactions(requestParameters: GetWalletTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Transaction>> {\n        const response = await this.getWalletTransactionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const GetWalletTransactionsTokenTypeEnum = {\n    Nft: 'NFT',\n    Sft: 'SFT',\n    Unknown: 'unknown'\n} as const;\nexport type GetWalletTransactionsTokenTypeEnum = typeof GetWalletTransactionsTokenTypeEnum[keyof typeof GetWalletTransactionsTokenTypeEnum];\n"],"names":[],"version":3,"file":"index.js.map"}