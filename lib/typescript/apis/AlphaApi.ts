/* tslint:disable */
/* eslint-disable */
/**
 * n.xyz REST API
 * REST API for blockchain data.
 *
 * The version of the OpenAPI document: 0.17.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Collection,
  ErrorMessage,
  Token,
  Wallet,
} from '../models';
import {
    CollectionFromJSON,
    CollectionToJSON,
    ErrorMessageFromJSON,
    ErrorMessageToJSON,
    TokenFromJSON,
    TokenToJSON,
    WalletFromJSON,
    WalletToJSON,
} from '../models';

/**
 * 
 */
export class AlphaApi extends runtime.BaseAPI {

    /**
     * Returns trending and interesting collections on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.
     */
    async getTopCollectionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Collection>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apikey"] = this.configuration.apiKey("apikey"); // apikey authentication
        }

        const response = await this.request({
            path: `/api/v1-alpha/collections/top`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CollectionFromJSON));
    }

    /**
     * Returns trending and interesting collections on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.
     */
    async getTopCollections(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Collection>> {
        const response = await this.getTopCollectionsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Returns trending and interesting NFTs and SFTs on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.
     */
    async getTopTokensRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Token>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apikey"] = this.configuration.apiKey("apikey"); // apikey authentication
        }

        const response = await this.request({
            path: `/api/v1-alpha/tokens/top`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenFromJSON));
    }

    /**
     * Returns trending and interesting NFTs and SFTs on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.
     */
    async getTopTokens(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Token>> {
        const response = await this.getTopTokensRaw(initOverrides);
        return await response.value();
    }

    /**
     * Returns trending and interesting wallets on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.
     */
    async getTopWalletsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Wallet>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["apikey"] = this.configuration.apiKey("apikey"); // apikey authentication
        }

        const response = await this.request({
            path: `/api/v1-alpha/wallets/top`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WalletFromJSON));
    }

    /**
     * Returns trending and interesting wallets on Ethereum. Useful for powering discovery experiences and providing an on-ramp to exploring creative blockchain data.
     */
    async getTopWallets(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Wallet>> {
        const response = await this.getTopWalletsRaw(initOverrides);
        return await response.value();
    }

}
